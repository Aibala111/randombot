from aiogram import Bot, Dispatcher, executor, types
import config 

import random

bot = Bot(config.token)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start', 'go'])
async def start(message : types.Message):
    # with open('users.txt', 'r', encoding='utf-8') as read_user:
    #     res = read_user.readlines()
    #     users = []
    #     if res != []:
    #         for i in res:
    #             username = i.split()
    #             if username not in users:
    #                 users.append(username)
    #                 if username in users:
    #                     with open('users.txt', 'a+', encoding='utf-8') as user:
    #                         user.write(f'{message.from_user.username} {message.from_user.id} {time.ctime()}\n')
    #     else:
    #         with open('users.txt', 'a+', encoding='utf-8') as users:
    #             users.write(f"{message.from_user.username} {message.from_user.id} {time.ctime()}\n")
    await message.answer(f"–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ {message.from_user.full_name}!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /help - —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å —ç—Ç–æ—Ç –±–æ—Ç",reply_markup = nav.mainMenu)
        
@dp.message_handler(commands=['help'])
async def help(message: types.Message):
    await message.answer("–Ø –º–æ–≥—É –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–≥—Ä—É << –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ >>\n–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n1) –Ø —É–≥–∞–¥—ã–≤–∞—é —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3 –≤—ã –¥–æ–ª–∂–Ω—ã –µ–≥–æ –æ—Ç–≥–∞–¥–∞—Ç—å\n2) –ù–µ –ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç <<–≠—á—Ç–µ–∫–µ —á—ã–∫–ø–∞–π—Ç>>\n–ú–æ–∏ –ö–æ–º–º–∞–Ω–¥—ã:\n/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞.\n/help - –ü–æ–º–æ—â—å.\n/startplay - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É")

@dp.message_handler(commands=['startplay'])
async def startplay(message: types.Message):
    await message.answer("–¢—ã –≤ –∏–≥—Ä–µ. –Ø –∑–∞–≥–∞–¥–∞—é —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3, –ü–æ–ø—Ä–æ–±—É–π –æ—Ç–≥–∞–¥–∞—Ç—å ? : ")

@dp.message_handler(text=["1","2","3",])
async def hello(message: types.Message):
    user = int(message.text)
    randomer = random.randint(1, 3)
    if user == randomer:
        await message.reply(f"–í—ã —É–≥–∞–¥–∞–ª–∏! –ú–æ—ë —á–∏—Å–ª–æ: {randomer}")
        
    elif user != randomer:
        await message.reply(f"–í—ã  –Ω–µ —É–≥–∞–¥–∞–ª–∏! –ú–æ—ë —á–∏—Å–ª–æ: {randomer} ")

    
# @dp.message_handler(content_types=['text'])
# async def other(message: types.Message):
#     if message.text =='üîª–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
#         await message.answer(f".{message.from_user},'–£–≥–∞–¥–∞–π—Ç–µ', {random.randint(1,3)}")
        
#     elif message.text == 'üîµ–î—Ä—É–≥–æ–µ':
        
#         await message.answer(f"{message.from_user}, 'üîµ–î—Ä—É–≥–æ–µ',reply_markups = nav.otherMenu")
        

    
    
@dp.message_handler(commands=['help'])
async def help(message: types.Message):
    await message.reply("–ü–æ–º–æ—â—å")

@dp.message_handler(text = "–ü—Ä–∏–≤–µ—Ç")
async def hello(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç")

# @dp.message_handler(commands=['play'])
# async def play(message:types.Message):
#     await message.answer("–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3")
# random_number = random.randint(1,3)
# users = int(input("–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ: "))
# if users == random_number:
#     print("–í—ã —É–≥–∞–¥–∞–ª–∏! ")
# else:
#     print("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏")
              
    
# @dp.message_handler()
# async def not_foun(message: types.Message):
#     await message.reply("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª –≤–≤–µ–¥–∏—Ç–µ /help")
    

executor.start_polling(dp)